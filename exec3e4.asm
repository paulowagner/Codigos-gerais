format ELF
section '.text' executable
public abs
public toupper
public memset
public strlen
public strcpy
public strcat
public strcmp
public strchr
public strstr
public bisxt
public primo


abs:	PUSH EBP
	MOV EBP,ESP
	MOV AX,[EBP+8]
	NEG AX
	POP EBP
	RET


toupper:	PUSH EBP
		MOV EBP,ESP
		MOV AX,[EBP+8]
		CMP AX,61
		JB fim1
		CMP AX,7Ah
		JA fim1
		ADD AX,20
fim1:		POP EBP
		RET





memset:	PUSH EBP
	MOV EBP,ESP
	PUSH EAX
	PUSH ECX
	PUSH EBX
	MOV AL,[EBP+12]
	MOV ECX,[EBP+16]
	MOV EBX,[EBP+8]
	DEC ECX
ll:	MOV [EBP+ECX],al
	LOOP ll
	POP EBX
	POP ECX
	POP EAX
	POP EBP
	RET



strlen:	PUSH EBP
	MOV EBP,ESP
	PUSH EBX
	MOV EBX,[EBP+8]
	XOR AX,AX
VOLTA:	CMP BYTE [EBX+EAX],0
	JE FIM2
	INC EAX
	JMP VOLTA
FIM2:	POP EBX
	POP EBP
	RET



strcpy:	PUSH EBP
	MOV EBP,ESP
	PUSH EBX
	PUSH ESI
	PUSH ECX
	MOV EBX,[EBP+12]
	MOV EAX,[EBP+8]
	XOR ESI,ESI
VOLTA2:	MOV CL,[EBX+ESI]
	MOV [EAX+ESI],CL
	CMP CL,0
	JE FIM3
	INC ESI
	JMP VOLTA2
FIM3:	POP ECX
	POP ESI
	POP EBX
	POP EBP
	RET


strcat:	PUSH EBP
	MOV EBP,ESP
	PUSH EBX
	PUSH ESI
	PUSH ECX
	MOV EBX,[EBP+12]
	MOV EAX,[EBP+8]
	PUSH EAX
	XOR ESI,ESI
L1:	CMP BYTE [EAX],0
	JNE L1
L2:	MOV CL,[EBX+ESI]
	MOV [EAX+ESI],CL
	CMP CL,0
	JE FIM4
	INC ESI
	JMP L2
FIM4:	POP EAX
	POP ECX
	POP ESI
	POP EBX
	POP EBP
	RET


strcmp:	PUSH EBP
	MOV EBP,ESP
	PUSH EBX
	PUSH EDX
	PUSH ESI
	MOV EBX,[EBP+12]
	MOV EDX,[EBP+8]
	XOR EAX,EAX
	XOR ESI,ESI
VOLTA3:	MOV AL,[EDX+ESI]
	SUB AL,[EBX+ESI]
	JNZ FIM5
	CMP AL,0
	JZ FIM5
	INC ESI
	JMP VOLTA3
FIM5:	POP ESI
	POP EDX
	POP EBX
	POP EBP
	RET


strchr:	PUSH EBP
	MOV EBP,ESP
	PUSH EBX
	MOV EAx,[EBP+8]
	MOV EBX,[EBP+12]
VOLTA4:	CMP BL,[EAX]
	JE FIM6
	CMP BH,[EAX]
	JZ FIMN
	INC EAX
	JMP VOLTA4
FIMN:	XOR EAX,EAX
FIM6:	POP EBX
	POP EBP
	RET



strstr:	PUSH EBP
	MOV EBP,ESP
	PUSH EBX
	PUSH ESI
	PUSH EDX
	MOV EAX,[EBP+8]
	MOV EBX,[EBP+12]
	
PROX:	CMP BYTE [EAX],0
	JNZ BUSCA
	MOV EAX,0
	JMP FIM7

BUSCA:	MOV DL,[EAX]
	INC EAX
	CMP DL,[EBX]
	JNZ PROX

PERC:	CMP BYTE [EBX+ESI],0
	JE FIM7
	INC ESI
	MOV DL,[EAX+ESI]
	CMP DL,[EBX+ESI]
	JE PERC
	INC EAX
	XOR ESI,ESI
	JMP PROX

FIM7:	PUSH EDX
	PUSH ESI
	PUSH EBX
	PUSH EBP
	RET


;int bisxt(int ano);

bisxt:	PUSH EBP
	PUSH EDX
	PUSH ECX
	MOV EBP,ESP
	MOV EAX,[EBP+8]
	MOV ECX,4
	XOR EDX,EDX
	DIV ECX
	CMP EDX,0
	JNE FIMS
	MOV ECX,100
	XOR EDX,EDX
	DIV ECX
	CMP EDX,0
	JNE FIMS
	MOV ECX,400
	XOR EDX,EDX
	DIV ECX
	CMP EDX,0
	JZ FIMS
	MOV EAX,0
	JMP FIM0	
FIMS:	MOV EAX,1
FIM0:	POP ECX
	POP EDX
	POP EBP
	RET


;int primo(int n);

primo:	PUSH EBP
	MOV EBP,ESP
	PUSH ECX
	PUSH EDX
	MOV EAX,[EBP+8]
	MOV ECX,EAX
	DEC ECX
	CMP ECX,1
	JBE FIMP
	XOR EDX,EDX
	DIV ECX
	CMP EDX,0
	JE NPRIMO
FIMP:	MOV EAX,1
	JMP PULA
NPRIMO:	MOV EAX,0
PULA:	POP EDX
	POP ECX
	POP EBP
	RET
